<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Typescript简单排序</title>
    <url>/2022/06/27/Typescript%E7%AE%80%E5%8D%95%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<ol>
<li>利用<code>nodemon</code>和<code>concurrently</code>编译并执行ts的demo <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// package.json - scripts</span></span><br><span class="line"> <span class="string">&quot;start:build&quot;</span>: <span class="string">&quot;tsc -w&quot;</span>,</span><br><span class="line">	<span class="string">&quot;start:run&quot;</span>: <span class="string">&quot;nodemon build/index.js&quot;</span></span><br><span class="line"><span class="string">&quot;start&quot;</span>: <span class="string">&quot;concurrently npm:start:*&quot;</span></span><br></pre></td></tr></table></figure></li>
<li>类型保护<ul>
<li>原始值<code>number</code> <code>string</code> <code>boolean</code> <code>symbol</code>使用<code>typeof</code>判断类型</li>
<li>其他类型使用<code>instanceof</code>判断</li>
</ul>
</li>
<li>简单链表</li>
<li>接口和抽象类的使用和异同</li>
</ol>
<span id="more"></span>

<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始版本</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sorter</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="attr">collection</span>: <span class="built_in">number</span>[];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">constructor</span>(<span class="params">collection: <span class="built_in">number</span>[]</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">collection</span> = collection;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// public constructor(public collection: number[]) &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">sort</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="comment">// const length = this.collection.length;</span></span><br><span class="line">    <span class="keyword">const</span> &#123; length &#125; = <span class="variable language_">this</span>.<span class="property">collection</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">collection</span>[j] &gt; <span class="variable language_">this</span>.<span class="property">collection</span>[j + <span class="number">1</span>]) &#123;</span><br><span class="line">          <span class="keyword">const</span> leftHand = <span class="variable language_">this</span>.<span class="property">collection</span>[j];</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">collection</span>[j] = <span class="variable language_">this</span>.<span class="property">collection</span>[j + <span class="number">1</span>];</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">collection</span>[j + <span class="number">1</span>] = leftHand;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sorter = <span class="keyword">new</span> <span class="title class_">Sorter</span>([<span class="number">1</span>, -<span class="number">2</span>, <span class="number">10</span>, <span class="number">3</span>]);</span><br><span class="line">sorter.<span class="title function_">sort</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sorter.<span class="property">collection</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 完整版本</span></span><br><span class="line"><span class="comment">// index.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Sorter</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./Sorter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NumbersCollection</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./NumbersCollection&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CharacterCollection</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./CharactersCollection&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LinkedList</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./LinkedList&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbersList = <span class="keyword">new</span> <span class="title class_">NumbersCollection</span>([<span class="number">1</span>, <span class="number">4</span>, -<span class="number">2</span>, <span class="number">10</span>, <span class="number">3</span>]);</span><br><span class="line"><span class="keyword">const</span> characters = <span class="keyword">new</span> <span class="title class_">CharacterCollection</span>(<span class="string">&quot;nishino&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> linkList = <span class="keyword">new</span> <span class="title class_">LinkedList</span>();</span><br><span class="line">linkList.<span class="title function_">add</span>(<span class="number">10</span>);</span><br><span class="line">linkList.<span class="title function_">add</span>(-<span class="number">3</span>);</span><br><span class="line">linkList.<span class="title function_">add</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 抽象类后无法创建实例</span></span><br><span class="line"><span class="comment">// const sorter = new Sorter(linkList);</span></span><br><span class="line"><span class="comment">// sorter.sort();</span></span><br><span class="line"><span class="comment">// console.log(sorter.collection);</span></span><br><span class="line">linkList.<span class="title function_">print</span>();</span><br></pre></td></tr></table></figure>

<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Sorter.ts</span></span><br><span class="line"><span class="comment">// 接口</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Sortable</span> &#123;</span><br><span class="line">  <span class="attr">length</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">compare</span>: <span class="function">(<span class="params">leftIndex: <span class="built_in">number</span>, rightIndex: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">swap</span>: <span class="function">(<span class="params">leftIndex: <span class="built_in">number</span>, rightIndex: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 抽象类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Sorter</span> &#123;</span><br><span class="line">  <span class="keyword">abstract</span> <span class="attr">length</span>: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">sort</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; length &#125; = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">compare</span>(j, j + <span class="number">1</span>)) &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">swap</span>(j, j + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">abstract</span> <span class="title function_">compare</span>(<span class="attr">leftIndex</span>: <span class="built_in">number</span>, <span class="attr">right</span>: <span class="built_in">number</span>): <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="keyword">abstract</span> <span class="title function_">swap</span>(<span class="attr">leftIndex</span>: <span class="built_in">number</span>, <span class="attr">rightIndex</span>: <span class="built_in">number</span>): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// NumbersCollection.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Sorter</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./Sorter&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">NumbersCollection</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Sorter</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"><span class="keyword">public</span> data: <span class="built_in">number</span>[]</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">length</span>(): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">length</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">compare</span>(<span class="attr">leftIndex</span>: <span class="built_in">number</span>, <span class="attr">rightIndex</span>: <span class="built_in">number</span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">data</span>[leftIndex] &gt; <span class="variable language_">this</span>.<span class="property">data</span>[rightIndex];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">swap</span>(<span class="attr">leftIndex</span>: <span class="built_in">number</span>, <span class="attr">rightIndex</span>: <span class="built_in">number</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> leftHand = <span class="variable language_">this</span>.<span class="property">data</span>[leftIndex];</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">data</span>[leftIndex] = <span class="variable language_">this</span>.<span class="property">data</span>[rightIndex];</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">data</span>[rightIndex] = leftHand;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// CharactersCollection.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Sorter</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./Sorter&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CharacterCollection</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Sorter</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"><span class="keyword">public</span> data: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">length</span>(): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">length</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">compare</span>(<span class="attr">leftIndex</span>: <span class="built_in">number</span>, <span class="attr">rightIndex</span>: <span class="built_in">number</span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data</span>[leftIndex].<span class="title function_">toLocaleLowerCase</span>() &gt;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data</span>[rightIndex].<span class="title function_">toLocaleLowerCase</span>()</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">swap</span>(<span class="attr">leftIndex</span>: <span class="built_in">number</span>, <span class="attr">rightIndex</span>: <span class="built_in">number</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> characters = <span class="variable language_">this</span>.<span class="property">data</span>.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> leftHand = characters[leftIndex];</span><br><span class="line">    characters[leftIndex] = characters[rightIndex];</span><br><span class="line">    characters[rightIndex] = leftHand;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">data</span> = characters.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// LinkedList.ts 链表</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Sorter</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./Sorter&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span> &#123;</span><br><span class="line">  <span class="attr">next</span>: <span class="title class_">Node</span> | <span class="literal">null</span> = <span class="literal">null</span>;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"><span class="keyword">public</span> data: <span class="built_in">number</span></span>) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LinkedList</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Sorter</span> &#123;</span><br><span class="line">  <span class="attr">head</span>: <span class="title class_">Node</span> | <span class="literal">null</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">add</span>(<span class="attr">data</span>: <span class="built_in">number</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> node = <span class="keyword">new</span> <span class="title class_">Node</span>(data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">head</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">head</span> = node;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> tail = <span class="variable language_">this</span>.<span class="property">head</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (tail.<span class="property">next</span>) &#123;</span><br><span class="line">      tail = tail.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tail.<span class="property">next</span> = node;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">length</span>(): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">head</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> length = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> node = <span class="variable language_">this</span>.<span class="property">head</span>;</span><br><span class="line">    <span class="keyword">while</span> (node.<span class="property">next</span>) &#123;</span><br><span class="line">      length++;</span><br><span class="line">      node = node.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> length;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">at</span>(<span class="attr">index</span>: <span class="built_in">number</span>): <span class="title class_">Node</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">head</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Index out of the bounds&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">node</span>: <span class="title class_">Node</span> | <span class="literal">null</span> = <span class="variable language_">this</span>.<span class="property">head</span>;</span><br><span class="line">    <span class="keyword">while</span> (node) &#123;</span><br><span class="line">      <span class="keyword">if</span> (counter === index) &#123;</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      counter++;</span><br><span class="line">      node = node.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Index out of the bounds&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">compare</span>(<span class="attr">leftIndex</span>: <span class="built_in">number</span>, <span class="attr">rightIndex</span>: <span class="built_in">number</span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">head</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;List is empty&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">at</span>(leftIndex).<span class="property">data</span> &gt; <span class="variable language_">this</span>.<span class="title function_">at</span>(rightIndex).<span class="property">data</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">swap</span>(<span class="attr">leftIndex</span>: <span class="built_in">number</span>, <span class="attr">rightIndex</span>: <span class="built_in">number</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> leftNode = <span class="variable language_">this</span>.<span class="title function_">at</span>(leftIndex);</span><br><span class="line">    <span class="keyword">const</span> rightNode = <span class="variable language_">this</span>.<span class="title function_">at</span>(rightIndex);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> leftHand = leftNode.<span class="property">data</span>;</span><br><span class="line"></span><br><span class="line">    leftNode.<span class="property">data</span> = rightNode.<span class="property">data</span>;</span><br><span class="line">    rightNode.<span class="property">data</span> = leftHand;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">print</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">head</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="attr">node</span>: <span class="title class_">Node</span> | <span class="literal">null</span> = <span class="variable language_">this</span>.<span class="property">head</span>;</span><br><span class="line">    <span class="keyword">while</span> (node) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(node);</span><br><span class="line">      node = node.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>代码</tag>
        <tag>Typescript</tag>
      </tags>
  </entry>
  <entry>
    <title>About Me</title>
    <url>/2022/06/27/about/</url>
    <content><![CDATA[<blockquote>
<p>🤔</p>
</blockquote>
<p>姓名：聂浩<br>现居：重庆<br>GitHub: <a href="https://github.com/a1501255708">NieHao</a><br>QQ: 1501255708<br>微信: a1501255708</p>
<span id="more"></span>]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>嘻嘻</title>
    <url>/2022/06/28/%E7%A7%98%E5%AF%86/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="04015b0a85eb923edc0a36699945495b849af354d6b8c41caec153669e2476a3">d71b57c4358ddc0aa3d8799dbf0adbe6ba0728a3b332c0ea621753d18e1d70e2f63edccfd23bb187927699ab4def1ddec8c02bfd0cb25dd23280349292bfcc82f757a55b987ff1c9fee389ae68c30574bafa98d7e9139b64bcd6018cb366e8936686195aa93b701e47997a293c1bad7637bce8ecc61632c3721c2e38e2398670c11f5ef223419686e8b81fd6428921fb76cbfe58d3463fa66352eb5416a936d3</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>视频分片上传</title>
    <url>/2022/08/02/%E8%A7%86%E9%A2%91%E5%88%86%E7%89%87%E4%B8%8A%E4%BC%A0Demo/</url>
    <content><![CDATA[<blockquote>
<p>待完善: 多视频上传时并发问题(Promise.all)？</p>
</blockquote>
<h2 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">BASE_URL</span> = <span class="string">&#x27;http://localhost:8000/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">API</span> = &#123;</span><br><span class="line">  <span class="attr">UPLOAD_VIDEO</span>: <span class="variable constant_">BASE_URL</span> + <span class="string">&#x27;upload_video&#x27;</span>,</span><br><span class="line">  <span class="attr">MERGE_VIDEO</span>: <span class="variable constant_">BASE_URL</span> + <span class="string">&#x27;merge_video&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">ALLOWED_TYPES</span> = &#123;</span><br><span class="line">  <span class="string">&#x27;video/mp4&#x27;</span>: <span class="string">&#x27;mp4&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/webm&#x27;</span>: <span class="string">&#x27;webm&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/ogg&#x27;</span>: <span class="string">&#x27;ogv&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/flv&#x27;</span>: <span class="string">&#x27;flv&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/mov&#x27;</span>: <span class="string">&#x27;mov&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/avi&#x27;</span>: <span class="string">&#x27;avi&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/wmv&#x27;</span>: <span class="string">&#x27;wmv&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/mpg&#x27;</span>: <span class="string">&#x27;mpeg&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/mpeg&#x27;</span>: <span class="string">&#x27;mpeg&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/m4v&#x27;</span>: <span class="string">&#x27;m4v&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/mov&#x27;</span>: <span class="string">&#x27;mov&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/mkv&#x27;</span>: <span class="string">&#x27;mkv&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/3gp&#x27;</span>: <span class="string">&#x27;3gp&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/3g2&#x27;</span>: <span class="string">&#x27;3g2&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/mp4&#x27;</span>: <span class="string">&#x27;mp4&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/m4v&#x27;</span>: <span class="string">&#x27;m4v&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">UPLOAD_INFO</span> = &#123;</span><br><span class="line">  <span class="attr">NO_FILE</span>: <span class="string">&#x27;请选择文件&#x27;</span>,</span><br><span class="line">  <span class="attr">FILE_TYPE_ERROR</span>: <span class="string">&#x27;文件类型错误&#x27;</span>,</span><br><span class="line">  <span class="attr">UPLOADING</span>: <span class="string">&#x27;上传中...&#x27;</span>,</span><br><span class="line">  <span class="attr">FAILED</span>: <span class="string">&#x27;上传失败&#x27;</span>,</span><br><span class="line">  <span class="attr">SUCCESS</span>: <span class="string">&#x27;上传成功&#x27;</span>,</span><br><span class="line">  <span class="attr">TRANSCODING</span>: <span class="string">&#x27;转码中...&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">CHUNK_SIZE</span> = <span class="number">64</span> * <span class="number">1024</span>;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// client.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">&#x27;qs&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;xgplayer&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HlsPlayer</span> <span class="keyword">from</span> <span class="string">&#x27;xgplayer-hls&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">API</span>, <span class="variable constant_">ALLOWED_TYPES</span>, <span class="variable constant_">UPLOAD_INFO</span>, <span class="variable constant_">CHUNK_SIZE</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./config&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// todo 多视频上传利用Promise.all处理并发</span></span><br><span class="line"></span><br><span class="line">(<span class="function">(<span class="params">doc</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> oProgress = doc.<span class="title function_">querySelector</span>(<span class="string">&#x27;#uploadProgress&#x27;</span>),</span><br><span class="line">    oUploader = doc.<span class="title function_">querySelector</span>(<span class="string">&#x27;#videoUploader&#x27;</span>),</span><br><span class="line">    oUploadInfo = doc.<span class="title function_">querySelector</span>(<span class="string">&#x27;#uploadInfo&#x27;</span>),</span><br><span class="line">    oStartBtn = doc.<span class="title function_">querySelector</span>(<span class="string">&#x27;#startBtn&#x27;</span>),</span><br><span class="line">    oPauseBtn = doc.<span class="title function_">querySelector</span>(<span class="string">&#x27;#pauseBtn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@params</span> paused &#123;boolean&#125; 是否暂停</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@params</span> uploadedSize &#123;number&#125; 已上传的大小</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@params</span> uploadResult &#123;obj&#125; 上传结果</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@params</span> uploadedFileName &#123;string&#125; 服务端返回的文件名</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">let</span> paused = <span class="literal">true</span>,</span><br><span class="line">    uploadedSize = <span class="number">0</span>,</span><br><span class="line">    uploadResult = <span class="literal">null</span>,</span><br><span class="line">    uploadedFileName = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">init</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">bindEvent</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">bindEvent</span>(<span class="params"></span>) &#123;</span><br><span class="line">    oStartBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, uploadVideo, <span class="literal">false</span>);</span><br><span class="line">    oPauseBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, switchUploader.<span class="title function_">bind</span>(<span class="literal">null</span>, <span class="literal">true</span>), <span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span> 开始上传</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125; <span class="variable">void</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">uploadVideo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">switchUploader</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取上传file信息</span></span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">      <span class="attr">files</span>: [file],</span><br><span class="line">    &#125; = oUploader;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 错误判断</span></span><br><span class="line">    <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">      oUploadInfo.<span class="property">innerText</span> = <span class="variable constant_">UPLOAD_INFO</span>.<span class="property">NO_FILE</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable constant_">ALLOWED_TYPES</span>[file.<span class="property">type</span>]) &#123;</span><br><span class="line">      oUploadInfo.<span class="property">innerText</span> = <span class="variable constant_">UPLOAD_INFO</span>.<span class="property">FILE_TYPE_ERROR</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> &#123; name, size, type &#125; = file;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置进度条</span></span><br><span class="line">    oProgress.<span class="property">max</span> = size;</span><br><span class="line">    <span class="comment">// 设置上传大小 - 本地获取上传进度</span></span><br><span class="line">    uploadedSize = <span class="title class_">Number</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(name) || <span class="number">0</span>);</span><br><span class="line">    oUploadInfo.<span class="property">innerText</span> = <span class="variable constant_">UPLOAD_INFO</span>.<span class="property">UPLOADING</span>;</span><br><span class="line">    <span class="comment">// 分段上传</span></span><br><span class="line">    <span class="keyword">while</span> (uploadedSize &lt; size &amp;&amp; !paused) &#123;</span><br><span class="line">      <span class="comment">// 视频切片 @params CHUNK_SIZE &#123;number&#125; 切片大小</span></span><br><span class="line">      <span class="keyword">const</span> chunk = file.<span class="title function_">slice</span>(uploadedSize, uploadedSize + <span class="variable constant_">CHUNK_SIZE</span>);</span><br><span class="line">      <span class="comment">// 设置文件名</span></span><br><span class="line">      <span class="keyword">const</span> chunkName =</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() +</span><br><span class="line">        <span class="string">&#x27;_&#x27;</span> +</span><br><span class="line">        name.<span class="title function_">replace</span>(<span class="string">`.<span class="subst">$&#123;ALLOWED_TYPES[type]&#125;</span>`</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 创建formData</span></span><br><span class="line">      <span class="keyword">const</span> formData = <span class="title function_">createFormData</span>(&#123;</span><br><span class="line">        name,</span><br><span class="line">        size,</span><br><span class="line">        type,</span><br><span class="line">        chunkName,</span><br><span class="line">        chunk,</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 异步上传chunk</span></span><br><span class="line">        uploadResult = <span class="keyword">await</span> axios.<span class="title function_">post</span>(<span class="variable constant_">API</span>.<span class="property">UPLOAD_VIDEO</span>, formData);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="comment">// 错误捕获</span></span><br><span class="line">        oUploadInfo.<span class="property">innerText</span> = <span class="string">`<span class="subst">$&#123;UPLOAD_INFO[<span class="string">&#x27;FAILED&#x27;</span>]&#125;</span>(<span class="subst">$&#123;e.message&#125;</span>)`</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 更新上传进度</span></span><br><span class="line">      uploadedSize += chunk.<span class="property">size</span>;</span><br><span class="line">      oProgress.<span class="property">value</span> = uploadedSize;</span><br><span class="line">      <span class="comment">// 更新本地存储上传进度</span></span><br><span class="line">      <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(name, uploadedSize);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取后端转码后链接</span></span><br><span class="line">    <span class="title function_">mergeVideo</span>(name, type);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span> 切片上传</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; name &#123;string&#125; 文件名</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; type &#123;string&#125; 文件类型</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125; <span class="variable">void</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">mergeVideo</span>(<span class="params">name, type</span>) &#123;</span><br><span class="line">    <span class="comment">// 非暂停状态下执行 = 上传完成后执行</span></span><br><span class="line">    <span class="keyword">if</span> (!paused) &#123;</span><br><span class="line">      <span class="comment">// 设置文件名和上传状态</span></span><br><span class="line">      oUploader.<span class="property">value</span> = <span class="literal">null</span>;</span><br><span class="line">      uploadedFileName = uploadResult.<span class="property">data</span>.<span class="property">filename</span>;</span><br><span class="line">      oUploadInfo.<span class="property">innerText</span> = <span class="variable constant_">UPLOAD_INFO</span>.<span class="property">TRANSCODING</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">post</span>(</span><br><span class="line">        <span class="variable constant_">API</span>.<span class="property">MERGE_VIDEO</span>,</span><br><span class="line">        qs.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">          <span class="attr">filename</span>: uploadedFileName,</span><br><span class="line">          type,</span><br><span class="line">        &#125;)</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 重置本地存储上传进度</span></span><br><span class="line">      <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(name);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 1006 - 后端设置错误码</span></span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">1006</span>) &#123;</span><br><span class="line">        oUploadInfo.<span class="property">innerText</span> = <span class="string">`<span class="subst">$&#123;UPLOAD_INFO.FAILED&#125;</span>(<span class="subst">$&#123;res.data.msg&#125;</span>)`</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        oUploadInfo.<span class="property">innerText</span> = <span class="variable constant_">UPLOAD_INFO</span>.<span class="property">SUCCESS</span>;</span><br><span class="line">        <span class="title function_">switchUploader</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HlsPlayer</span>(&#123;</span><br><span class="line">          <span class="attr">id</span>: <span class="string">&#x27;videoContainer&#x27;</span>,</span><br><span class="line">          <span class="attr">url</span>: res.<span class="property">data</span>.<span class="property">videoSrc</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * @ description 创建formData文件信息</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; &#123;<span class="type"> name, type, size, chunkName, chunk </span>&#125; &#123;<span class="type">string</span>&#125; 文件信息</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125; <span class="variable">formData</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">createFormData</span>(<span class="params">&#123; name, type, size, chunkName, chunk &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">    fd.<span class="title function_">append</span>(<span class="string">&#x27;name&#x27;</span>, name);</span><br><span class="line">    fd.<span class="title function_">append</span>(<span class="string">&#x27;type&#x27;</span>, type);</span><br><span class="line">    fd.<span class="title function_">append</span>(<span class="string">&#x27;size&#x27;</span>, size);</span><br><span class="line">    fd.<span class="title function_">append</span>(<span class="string">&#x27;chunkName&#x27;</span>, chunkName);</span><br><span class="line">    fd.<span class="title function_">append</span>(<span class="string">&#x27;chunk&#x27;</span>, chunk);</span><br><span class="line">    <span class="keyword">return</span> fd;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span> 暂停/继续上传</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; isPause &#123;boolean&#125; 是否暂停</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">switchUploader</span>(<span class="params">isPause</span>) &#123;</span><br><span class="line">    paused = isPause;</span><br><span class="line">    oStartBtn.<span class="property">style</span>.<span class="property">display</span> = paused ? <span class="string">&#x27;block&#x27;</span> : <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    oPauseBtn.<span class="property">style</span>.<span class="property">display</span> = paused ? <span class="string">&#x27;none&#x27;</span> : <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">init</span>();</span><br><span class="line">&#125;)(<span class="variable language_">document</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> uploader = <span class="built_in">require</span>(<span class="string">&#x27;express-fileupload&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CryptoJS</span> = <span class="built_in">require</span>(<span class="string">&#x27;crypto-js&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ffmpegPath = <span class="built_in">require</span>(<span class="string">&#x27;@ffmpeg-installer/ffmpeg&#x27;</span>).<span class="property">path</span>;</span><br><span class="line"><span class="keyword">const</span> ffmpeg = <span class="built_in">require</span>(<span class="string">&#x27;fluent-ffmpeg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; resolve &#125; = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  readFileSync,</span><br><span class="line">  writeFileSync,</span><br><span class="line">  appendFileSync,</span><br><span class="line">  existsSync,</span><br><span class="line">  unlinkSync,</span><br><span class="line">  rmdirSync,</span><br><span class="line">  readdirSync,</span><br><span class="line">  mkdirSync,</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = <span class="number">8000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置express</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;));</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">uploader</span>());</span><br><span class="line"><span class="comment">// 设置文件静态路径</span></span><br><span class="line">app.<span class="title function_">use</span>(</span><br><span class="line">  <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">  express.<span class="title function_">static</span>(<span class="string">&#x27;videos&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">setHeaders</span>: <span class="function">(<span class="params">res, path, stat</span>) =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置路径</span></span><br><span class="line">ffmpeg.<span class="title function_">setFfmpegPath</span>(ffmpegPath);</span><br><span class="line"></span><br><span class="line"><span class="comment">// localhost:8000/xx/xx.m3u8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 允许跨域</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;*&#x27;</span>, <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class="string">&#x27;GET, POST, OPTIONS, PUT, DELETE&#x27;</span>);</span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">ALLOWED_TYPES</span> = &#123;</span><br><span class="line">  <span class="string">&#x27;video/mp4&#x27;</span>: <span class="string">&#x27;mp4&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;video/ogg&#x27;</span>: <span class="string">&#x27;ogv&#x27;</span>,</span><br><span class="line">  <span class="attr">hls</span>: <span class="string">&#x27;m3u8&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> tempDir = <span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./temp/&#x27;</span>),</span><br><span class="line">  videoDir = <span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./videos/&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/upload_video&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取视频切片信息</span></span><br><span class="line">  <span class="keyword">const</span> &#123; name, type, size, chunkName &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">// 获取chunk</span></span><br><span class="line">  <span class="keyword">const</span> &#123; chunk &#125; = req.<span class="property">files</span>,</span><br><span class="line">    fileName = <span class="title class_">CryptoJS</span>.<span class="title class_">MD5</span>(name).<span class="title function_">toString</span>(),</span><br><span class="line">    tempFilesDir = tempDir + <span class="string">&#x27;/&#x27;</span> + fileName;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 后端错误判断</span></span><br><span class="line">  <span class="keyword">if</span> (!chunk) &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(&#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="number">1001</span>,</span><br><span class="line">      <span class="attr">msg</span>: <span class="string">&#x27;No file uploaded&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable constant_">ALLOWED_TYPES</span>[type]) &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(&#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="number">1002</span>,</span><br><span class="line">      <span class="attr">msg</span>: <span class="string">&#x27;File type error&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判断是否存在文件夹,不存在则创建</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_">existsSync</span>(tempFilesDir)) &#123;</span><br><span class="line">    <span class="title function_">mkdirSync</span>(tempFilesDir);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 写入文件</span></span><br><span class="line">  <span class="title function_">writeFileSync</span>(tempFilesDir + <span class="string">&#x27;/&#x27;</span> + chunkName, chunk.<span class="property">data</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(&#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&#x27;Chunk uploaded&#x27;</span>,</span><br><span class="line">    <span class="attr">filename</span>: fileName.<span class="title function_">toString</span>(),</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 合并转码</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/merge_video&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; filename, type &#125; = req.<span class="property">body</span>,</span><br><span class="line">    tempFilesDir = tempDir + <span class="string">&#x27;/&#x27;</span> + filename, <span class="comment">// 切片文件夹</span></span><br><span class="line">    videoFileDir = videoDir + <span class="string">&#x27;/&#x27;</span> + filename, <span class="comment">// 视频文件夹</span></span><br><span class="line">    fileList = <span class="title function_">readdirSync</span>(tempFilesDir); <span class="comment">// 获取切片文件列表</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判断是否存在视频文件夹,不存在则创建</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_">existsSync</span>(videoFileDir)) &#123;</span><br><span class="line">    <span class="title function_">mkdirSync</span>(videoFileDir);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// mp4/hls视频文件路径</span></span><br><span class="line">  <span class="keyword">const</span> mp4Path = <span class="string">`<span class="subst">$&#123;videoFileDir&#125;</span>/<span class="subst">$&#123;filename&#125;</span>.<span class="subst">$&#123;ALLOWED_TYPES[type]&#125;</span>`</span>,</span><br><span class="line">    hlsPath = <span class="string">`<span class="subst">$&#123;videoFileDir&#125;</span>/<span class="subst">$&#123;filename&#125;</span>.<span class="subst">$&#123;ALLOWED_TYPES[<span class="string">&#x27;hls&#x27;</span>]&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 循环写入文件</span></span><br><span class="line">  fileList.<span class="title function_">forEach</span>(<span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// chunk路径</span></span><br><span class="line">    <span class="keyword">const</span> chunkPath = <span class="string">`<span class="subst">$&#123;tempFilesDir&#125;</span>/<span class="subst">$&#123;chunk&#125;</span>`</span>;</span><br><span class="line">    <span class="comment">// chunk内容</span></span><br><span class="line">    <span class="keyword">const</span> chunkContent = <span class="title function_">readFileSync</span>(chunkPath);</span><br><span class="line">    <span class="comment">// 第一次写入文件，后续追加</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_">existsSync</span>(mp4Path)) &#123;</span><br><span class="line">      <span class="title function_">writeFileSync</span>(mp4Path, chunkContent);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">appendFileSync</span>(mp4Path, chunkContent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除切片文件</span></span><br><span class="line">    <span class="title function_">unlinkSync</span>(chunkPath);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">rmdirSync</span>(tempFilesDir); <span class="comment">// 删除切片文件夹</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 转码视频 - ffmpeg配置项</span></span><br><span class="line">  <span class="title function_">formatVideo</span>(mp4Path, &#123;</span><br><span class="line">    <span class="attr">videoCodec</span>: <span class="string">&#x27;libx264&#x27;</span>,</span><br><span class="line">    <span class="attr">format</span>: <span class="string">&#x27;hls&#x27;</span>,</span><br><span class="line">    <span class="attr">outputOptions</span>: <span class="string">&#x27;-hls_list_size 0&#x27;</span>,</span><br><span class="line">    <span class="attr">outputOption</span>: <span class="string">&#x27;-hls_time 5&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: hlsPath,</span><br><span class="line">    <span class="title function_">onError</span>(<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="comment">// 错误时删除video文件夹</span></span><br><span class="line">      <span class="keyword">const</span> fileList = <span class="title function_">readdirSync</span>(videoFileDir);</span><br><span class="line">      fileList.<span class="title function_">forEach</span>(<span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> chunkPath = <span class="string">`<span class="subst">$&#123;videoFileDir&#125;</span>/<span class="subst">$&#123;chunk&#125;</span>`</span>;</span><br><span class="line">        <span class="title function_">unlinkSync</span>(chunkPath);</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="title function_">rmdirSync</span>(videoFileDir);</span><br><span class="line">      res.<span class="title function_">send</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="number">1006</span>,</span><br><span class="line">        <span class="attr">msg</span>: e.<span class="property">message</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">onEnd</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 返回m3u8视频路径</span></span><br><span class="line">      res.<span class="title function_">send</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&#x27;Video created&#x27;</span>,</span><br><span class="line">        <span class="attr">videoSrc</span>: <span class="string">`http://localhost:8000/<span class="subst">$&#123;filename&#125;</span>/<span class="subst">$&#123;filename&#125;</span>.<span class="subst">$&#123;ALLOWED_TYPES[<span class="string">&#x27;hls&#x27;</span>]&#125;</span>`</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 视频转码</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">formatVideo</span> = (<span class="params"></span></span><br><span class="line"><span class="params">  path,</span></span><br><span class="line"><span class="params">  &#123; videoCodec, format, outputOptions, outputOption, output, onError, onEnd &#125;</span></span><br><span class="line"><span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">ffmpeg</span>(path)</span><br><span class="line">    .<span class="title function_">videoCodec</span>(videoCodec)</span><br><span class="line">    .<span class="title function_">format</span>(format)</span><br><span class="line">    .<span class="title function_">outputOptions</span>(outputOptions)</span><br><span class="line">    .<span class="title function_">outputOption</span>(outputOption)</span><br><span class="line">    .<span class="title function_">output</span>(output)</span><br><span class="line">    .<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, onError)</span><br><span class="line">    .<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, onEnd)</span><br><span class="line">    .<span class="title function_">run</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听端口</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server is running at port <span class="subst">$&#123;PORT&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>代码</tag>
        <tag>NodeJs</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>起点</title>
    <url>/2022/06/27/%E8%B5%B7%E7%82%B9/</url>
    <content><![CDATA[<p>要来咯！～</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
</search>
